#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Std;

#---------------------------------------------------------------------------
#  Vars
#---------------------------------------------------------------------------
my %opts;
my $new_branch;

#---------------------------------------------------------------------------
#  Usage Sub
#---------------------------------------------------------------------------
sub usage
{
    use Pod::Usage;
    my $msg     = shift;
    my $verbose = shift;
    return pod2usage({-message => $msg, -verbose => $verbose});
}

#---------------------------------------------------------------------------
#  GetOpts
#---------------------------------------------------------------------------
getopts('h:b:', \%opts);
if (exists $opts{'h'}) { usage('', 2); }
$new_branch = (exists $opts{'b'}) ? $opts{'b'} : '';

#---------------------------------------------------------------------------
#  And... go!
#---------------------------------------------------------------------------

if (scalar(@ARGV) < 1) {
    usage();
}

local @ARGV = map { my $temp = $_; $temp =~ s/"/\\"/g; "\"$temp\"" } @ARGV;
chomp(my $rev = `git date @ARGV`);
system("git checkout " . (($new_branch) ? "-b $new_branch " : '') . $rev);

__END__

=head1 NAME

B<git-checkout-date> - Checkout to a commit or new branch based on the 
last commit on/before the given datetime.

=head1 SYNOPSIS

 git checkout-date [<-b newbranch>] [date] [<oldbranch>]

=head1 DESCRIPTION

Checkout to a commit or new branch based on the last commit on/before the given datetime.  For more information on specifying datetimes, see L<git-date>(1).

=head1 OPTIONS

=over 8

=item -h

Display usage info.

=item -b

<newbranch>

=back

=head1 EXAMPLES

git checkout-date 4/4

git checkout-date 4/4 master

git checkout-date -b my-branch 4/14

git checkout-date -b my-branch 4/14 master

=head1 AUTHOR

Written by Tom Peters

=cut
